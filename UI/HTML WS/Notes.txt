



----------------------------------------------------------------------

Ref : 

https://crockford.com/
http://javascript.info/
http://exploringjs.com/
https://developer.mozilla.org/bm/docs/Web/JavaScript
http://kangax.github.io/compat-table/es6/
http://latentflip.com/loupe/?code=JC5vbignYnV0dG9uJywgJ2NsaWNrJywgZnVuY3Rpb24gb25DbGljaygpIHsKICAgIHNldFRpbWVvdXQoZnVuY3Rpb24gdGltZXIoKSB7CiAgICAgICAgY29uc29sZS5sb2coJ1lvdSBjbGlja2VkIHRoZSBidXR0b24hJyk7ICAgIAogICAgfSwgMjAwMCk7Cn0pOwoKY29uc29sZS5sb2coIkhpISIpOwoKc2V0VGltZW91dChmdW5jdGlvbiB0aW1lb3V0KCkgewogICAgY29uc29sZS5sb2coIkNsaWNrIHRoZSBidXR0b24hIik7Cn0sIDUwMDApOwoKY29uc29sZS5sb2coIldlbGNvbWUgdG8gbG91cGUuIik7!!!PGJ1dHRvbj5DbGljayBtZSE8L2J1dHRvbj4%3D
----------------------------------------------------------------------
.js is
    - client-side language for web-page on browser
    - server-side language on Node.js
    +
    - Mobile Native Appln with tool support
    - Desktop Appln with Electron
----------------------------------------------------------------------

 .js Features

    - FP + OOP
    - dynamic   

    - all IO operations by default non-blocking
    - single-thread process , can execute concurrent action while IO happening


----------------------------------------------------------------------

How to run .js program ?

    => using .js runtime

    browser-evni
    ---------------

    - chrome  => v8(c++)
    - firefox => rhino/spider monkey ( java )
    - IE/Edge => chakra
    - Safari  => nitro
    .....

    other envi
    ---------------

    - Node.js => v8
    - JVM     => rhino / nashorn
    ...

 
----------------------------------------------------------------------

.js-lang is based on 'ECMAScript spec '

    latest : ES6/ES7
 
----------------------------------------------------------------------

"Hello World"

----------------------------------------------------------------------

JS - topics
------------
Level-1:
    => data-types
    => scopes
    => FP  - depth
    => OOP 
    => SOLID principles
    => design patterns
level-2:
    => unit-Testing ( mocha m JEST & assertion lib)
Level-3:
    => new-syntax
    => new-apis
    => module-standards ( commonJS & ES Modules)
Level-4:
    => concurrency model & event loop
    => Async APIs ( Promise , RxJS , ..)
Level-5:
    => Tools
------------------------------------------------------------















